package pl.polsl.lab.servlets.search;

import java.io.*;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.*;
import pl.polsl.lab.model.Book;
import pl.polsl.lab.servlets.helpers.SearchResourcesController;

/**
 * Main class of the servlet displaying current time, date and image. Site
 * generated by servlet is refreshed every 10 seconds.
 *
 * @author Gall Anonim
 * @version 1.0
 */
@WebServlet("/SearchResponse")
public class SearchResponseServlet extends HttpServlet
{

    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }
    
    
     /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
     * methods.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    public void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException
    {

        HttpSession session = request.getSession(true);
        response.setContentType("text/html; charset=ISO-8859-2");
        PrintWriter out = response.getWriter();
        var type = request.getParameter("Type");
        var input = request.getParameter("input");

        var list = new SearchResourcesController().search(type, input);
        out.println("<html>\n<body style=\"background-color:#B1D0E0;\"><center><br><br><br>\n");

        if (list.size() > 0)
        {
            Book book = null;
            out.println("<table style=\"background-color:#daedf7;\"><tr><th>ID</th><th>Author</th><th>Title</th><th>Publisher</th><th>Release Date</th></tr>");
            for (int i = 0; i < list.size(); ++i)
            {
                book = list.get(i);
                out.println(String.format("<tr><td>%d</td><td>%s</td><td>%s</td><td>%s</td><td>%s</td></tr>", book.getId(), book.getAuthor(), book.getTitle(), book.getPublishingHouse(), book.getReleaseDateText()));
            }
            out.println("</table>");
            

            if(type.equals("ID") && book!=null)
            {
                session.setAttribute("id", input);
                session.setAttribute("title", book.getTitle());
                session.setAttribute("author", book.getAuthor());
                session.setAttribute("publishingHouse", book.getPublishingHouse());
                session.setAttribute("date", book.getReleaseDateText());
                
                out.println("<br><br><form action=\"DeleteResponse\" method=\"GET\">\n" +  
            "<input type=\"submit\" value=\"Delete\" />\n" +
            "</form>");
            }
        }
        else 
        {
            out.println("Empty list");
        }
        out.println("\n</center></body>\n</html>");
    }
}
